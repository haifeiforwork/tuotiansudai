apply plugin: 'java'
apply plugin: 'org.flywaydb.flyway'

version = '1.0'

configurations {
    providedCompile
}

sourceSets {
    main.compileClasspath += configurations.providedCompile
    test.compileClasspath += configurations.providedCompile
    test.runtimeClasspath += configurations.providedCompile
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}

dependencies {
    def springSecurityVersion = '4.0.2.RELEASE'
    compile fileTree(dir: 'libs', include: '**/*.jar'),
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.springframework.security:spring-security-web:$springSecurityVersion"

    providedCompile "javax.servlet:javax.servlet-api:3.1.0"

    compile fileTree(dir: 'libs', include: '**/*.jar')
}

processResources.outputs.upToDateWhen{ false }

processResources {
    from('/Users/xdgao/workspace/new_version_config/ttsd-service') {
        filter { String line ->
            if (line.startsWith("jdbc.host=") && project.hasProperty("dbhost")) {
                return "jdbc.host=${dbhost}"
            }

            if (line.startsWith("jdbc.port=") && project.hasProperty("dbport")) {
                return "jdbc.port=${dbport}"
            }
            line
        }
    }
    into '/'
}

flyway {
    if (project.hasProperty('database')) {
        outOfOrder = true
        locations = ["filesystem:db_migration/${database}"]
        schemas = ["${database}"]
        def propertiesFilePath = "${project.buildDir.getPath()}/resources/main/ttsd-service.properties"
        def properties = new Properties()
        properties.load(new FileInputStream(propertiesFilePath))
        def host = properties.getProperty("jdbc.host")
        def port = properties.getProperty("jdbc.port")
        url = "jdbc:mysql://${host}:${port}"
        user = properties.getProperty("jdbc.username")
        password = properties.getProperty("jdbc.password")
    }
}
