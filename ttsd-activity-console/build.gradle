apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'

buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://central.maven.org/maven2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://central.maven.org/maven2/" }
}

configurations {
    all*.exclude group: "log4j", module: "log4j"
    all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
    all*.exclude module: 'ttsd-dependency'
}

dependencies {
    compile project(":ttsd-user-service")
    compile project(":ttsd-spring-extension")
    compile project(":ttsd-web-common-config")
    compile project(":ttsd-edxactivity-repository")
    compile project(":ttsd-membership")
    compile project(":ttsd-service")
    compile project(":ttsd-log-service")
    compile project(":ttsd-edxpoint-repository")
    compile project(':ttsd-util')
    compile 'org.springframework.boot:spring-boot-starter-mail'
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile "org.springframework.boot:spring-boot-starter-jdbc"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-redis"
    compile "org.springframework.boot:spring-boot-starter-freemarker"
    compile "org.springframework.security:spring-security-taglibs:4.1.1.RELEASE"
    compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1"
    compile 'mysql:mysql-connector-java:5.1.39'
    compile 'com.zaxxer:HikariCP:2.4.7'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

war {
    archiveName "ttsd-activity-console.war"
    destinationDir = file("war")
}

task renameWar {
    doLast {
        file("${project.projectDir.getPath()}/war/ttsd-activity-console.war").renameTo(file("${project.projectDir.getPath()}/war/ROOT.war"))
    }
}