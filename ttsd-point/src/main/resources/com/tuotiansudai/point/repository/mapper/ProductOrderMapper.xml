<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.point.repository.mapper.ProductOrderMapper">

    <cache eviction="LRU" type="com.tuotiansudai.cache.MybatisRedisCache"/>

    <resultMap id="productOrderResultMap" type="ProductOrderModel">
        <id column="id" property="id"/>
        <result column="product_id" property="productId"/>
        <result column="product_price" property="productPrice"/>
        <result column="num" property="num"/>
        <result column="total_price" property="totalPrice"/>
        <result column="real_name" property="realName"/>
        <result column="mobile" property="mobile"/>
        <result column="address" property="address"/>
        <result column="consignment" property="consignment"/>
        <result column="consignment_time" property="consignmentTime"/>
        <result column="created_by" property="createdBy"/>
        <result column="created_time" property="createdTime"/>
    </resultMap>

    <resultMap id="productOrderExchangeResultMap" type="ProductOrderViewDto">
        <id column="id" property="id"/>
        <result column="product_id" property="productId"/>
        <result column="product_price" property="productPrice"/>
        <result column="num" property="num"/>
        <result column="total_price" property="totalPrice"/>
        <result column="product_name" property="productName"/>
        <result column="created_time" property="createdTime"/>
    </resultMap>

    <insert id="create" parameterType="ProductOrderModel" useGeneratedKeys="true" keyProperty="id">
        insert into product_order (`product_id`, `product_price`, `num`, `total_price`, `real_name`, `mobile`, `address`, `consignment`, `consignment_time`, `created_by`, `created_time`)
        value(#{productId}, #{productPrice},  #{num},  #{totalPrice},  #{realName},  #{mobile},  #{address}, #{consignment}, #{consignmentTime}, #{createdBy}, #{createdTime})
    </insert>

    <update id="update" parameterType="ProductOrderModel">
        update product_order
        set `consignment` = #{consignment},
            `consignment_time` = #{consignmentTime}
        where `id` = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="productOrderResultMap">
        select * from product_order where id = #{id};
    </select>

    <select id="findProductOrderCount" resultType="long">
        select count(id) from product_order p
        <where>
            <if test="productId != null">
                and p.product_id = #{productId}
            </if>
            <if test="createdBy != null">
                and p.created_by = #{createdBy}
            </if>
        </where>
    </select>

    <select id="findProductOrderList" resultMap="productOrderResultMap">
        select * from product_order p
        <where>
            <if test="productId != null">
                and p.product_id = #{productId}
            </if>
            <if test="createdBy != null">
                and p.created_by = #{createdBy}
            </if>
        </where>
        order by created_time desc
        limit #{index}, #{pageSize}
    </select>

    <select id="findProductOrderListByLoginName" parameterType="java.lang.String" resultMap="productOrderExchangeResultMap">
        select po.id as id,
        po.product_id as product_id,
        po.product_price as product_price,
        po.num as num,
        po.total_price as total_price,
        po.created_time as created_time,
        p.product_name as product_name
        from product_order po
        JOIN product p ON po.product_id = p.id
        WHERE po.created_by = #{loginName}
        order by po.created_time desc
    </select>
</mapper>