<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.repository.mapper.BankRechargeMapper">

    <resultMap id="bankRechargeResultMap" type="BankRechargeModel">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="fee" property="fee"/>
        <result column="pay_type" property="payType"/>
        <result column="bank_order_no" property="bankOrderNo"/>
        <result column="bank_order_date" property="bankOrderDate"/>
        <result column="status" property="status"/>
        <result column="source" property="source"/>
        <result column="channel" property="channel"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_time" property="updatedTime"/>
    </resultMap>

    <resultMap id="rechargeResultView" type="BankRechargePaginationView" extends="bankRechargeResultMap">
        <result column="user_name" property="userName"/>
        <result column="mobile" property="mobile"/>
        <result column="is_staff" property="isStaff"/>
    </resultMap>

    <insert id="create" parameterType="com.tuotiansudai.repository.model.BankRechargeModel" useGeneratedKeys="true" keyProperty="id">
        insert into bank_recharge(login_name, amount, fee, pay_type, status, source, channel, created_time, updated_time)
        value(#{loginName}, #{amount}, #{fee}, #{payType}, #{status}, #{source}, #{channel}, now(), now())
    </insert>

    <update id="update" parameterType="map">
        update bank_recharge SET
        bank_order_no = #{bankOrderNo},
        bank_order_date = #{bankOrderDate},
        status = #{status},
        updated_time = now()
        where id = #{id}
    </update>

    <select id="findById" parameterType="map" resultMap="bankRechargeResultMap">
        SELECT * FROM bank_recharge WHERE id = #{id}
    </select>

    <select id="sumRechargeSuccessAmountByLoginName" parameterType="map" resultType="int">
        SELECT IFNULL(sum(amount),0) FROM bank_recharge where status = 'SUCCESS' and login_name = #{loginName}
    </select>

    <select id="findRechargeCount" parameterType="map" resultType="int">
        select count(1) from bank_recharge recharge join user on recharge.login_name = user.login_name
        <if test="mobile !=null and mobile != '' ">
            and user.mobile = #{mobile}
        </if>
        <if test="role != '' and role != 'UN_LOANER' ">
            JOIN (SELECT login_name FROM `user_role` WHERE role = #{role}) temp_role ON recharge.login_name = temp_role.login_name
        </if>

        <if test="role != '' and role == 'UN_LOANER' ">
            join (SELECT
            login_name, GROUP_CONCAT(role) AS role
            FROM
            user_role
            GROUP BY login_name) ur
            ON ur.login_name = recharge.login_name
            AND ur.role NOT LIKE '%LOANER%'
        </if>
        <where>
            <if test="rechargeId !=null and rechargeId !='' ">
                recharge.id = #{rechargeId}
            </if>
            <if test="startTime !=null" >
                and recharge.created_time >= #{startTime}
            </if>
            <if test="endTime !=null ">
                and recharge.created_time &lt;= #{endTime}
            </if>
            <if test="status !=null">
                and recharge.status  = #{status}
            </if>
            <if test="source !=null">
                and recharge.source  = #{source}
            </if>
            <if test="channel !=null and channel != ''">
                and recharge.channel  = #{channel}
            </if>
        </where>
    </select>

    <select id="findAllChannels" resultType="java.lang.String">
        select distinct channel from bank_recharge where channel is not NULL
    </select>

    <select id="findSumRechargeAmount" parameterType="map" resultType="long">
        select IFNULL(sum(re.amount),0) as amount from bank_recharge re join user u on re.login_name = u.login_name
        <if test="mobile !=null and mobile != '' ">
            and u.mobile = #{mobile}
        </if>
        <if test="role != null and role != '' and role != 'UN_LOANER' ">
            join user_role ur on re.login_name = ur.login_name and ur.role = #{role}
        </if>

        <if test="role != null and role == 'UN_LOANER' ">
            join (SELECT
            login_name, GROUP_CONCAT(role) AS role
            FROM
            user_role
            GROUP BY login_name) ur
            ON ur.login_name = re.login_name
            AND ur.role NOT LIKE '%LOANER%'
        </if>
        <where>
            <if test="rechargeId !=null and rechargeId !='' ">
                re.id = #{rechargeId}
            </if>
            <if test="startTime !=null" >
                and re.created_time >= #{startTime}
            </if>
            <if test="endTime !=null ">
                and re.created_time &lt;= #{endTime}
            </if>
            <if test="status !=null">
                and re.status  = #{status}
            </if>
            <if test="source !=null">
                and re.source  = #{source}
            </if>
            <if test="channel !=null and channel != ''">
                and re.channel  = #{channel}
            </if>
        </where>
    </select>

    <select id="findRechargePagination" parameterType="map" resultMap="rechargeResultView">
        select r.*, u.user_name, u.mobile,
        IFNULL((select 1 from user_role ur where ur.login_name = r.login_name and ur.role in ('SD_STAFF', 'ZC_STAFF')),0) as is_staff
        from bank_recharge r
        JOIN `user` u on r.login_name = u.login_name
        <if test="role != '' and role != 'UN_LOANER' ">
            JOIN (SELECT login_name FROM `user_role` WHERE role = #{role}) temp_role ON r.login_name = temp_role.login_name
        </if>

        <if test="role != null and role == 'UN_LOANER' ">
            join (SELECT
            login_name, GROUP_CONCAT(role) AS role
            FROM
            user_role
            GROUP BY login_name) ur
            ON ur.login_name = r.login_name
            AND ur.role NOT LIKE '%LOANER%'
        </if>

        <if test="mobile !=null and mobile != '' ">
            and u.mobile = #{mobile}
        </if>
        <where>
            <if test="rechargeId !=null and rechargeId !='' ">
                r.id = #{rechargeId}
            </if>
            <if test="startTime !=null" >
                and r.created_time >= #{startTime}
            </if>
            <if test="endTime !=null ">
                and r.created_time &lt;= #{endTime}
            </if>
            <if test="status !=null">
                and r.status  = #{status}
            </if>
            <if test="source !=null">
                and r.source  = #{source}
            </if>
            <if test="channel !=null and channel != ''">
                and r.channel  = #{channel}
            </if>
        </where>
        order by r.created_time desc
        limit #{index}, #{pageSize}
    </select>

    <select id="findSuccessByDate" parameterType="map" resultMap="bankRechargeResultMap">
        SELECT * from bank_recharge where status = 'SUCCESS' and date_format(created_time,'%Y%m%d') = #{queryDate}
    </select>

</mapper>