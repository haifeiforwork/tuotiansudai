<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.repository.mapper.UserMapperDB">

    <cache eviction="LRU" type="com.tuotiansudai.cache.MybatisRedisCache"/>

    <resultMap id="userResultMap" type="UserModel">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="mobile" property="mobile"/>
        <result column="user_name" property="userName"/>
        <result column="identity_number" property="identityNumber"/>
        <result column="register_time" property="registerTime"/>
        <result column="last_modified_time" property="lastModifiedTime"/>
        <result column="last_modified_user" property="lastModifiedUser"/>
        <result column="avatar" property="avatar"/>
        <result column="referrer" property="referrer"/>
        <result column="status" property="status"/>
        <result column="salt" property="salt"/>
        <result column="channel" property="channel"/>
        <result column="source" property="source"/>
        <result column="province" property="province"/>
        <result column="city" property="city"/>
        <result column="sign_in_count" property="signInCount"/>
        <result column="last_login_time" property="lastLoginTime"/>
        <result column="last_login_source" property="lastLoginSource"/>
        <result column="experience_balance" property="experienceBalance"/>
    </resultMap>

    <resultMap id="userViewResultMap" type="UserView">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="mobile" property="mobile"/>
        <result column="user_name" property="userName"/>
        <result column="identity_number" property="identityNumber"/>
        <result column="email" property="email"/>
        <result column="register_time" property="registerTime"/>
        <result column="referrer_mobile" property="referrerMobile"/>
        <result column="status" property="status"/>
        <result column="channel" property="channel"/>
        <result column="source" property="source"/>
        <result column="province" property="province"/>
        <result column="city" property="city"/>
        <result column="auto_invest_status" property="autoInvestStatus"/>
        <result column="last_bill_time" property="lastBillTime"/>
    </resultMap>

    <select id="findByLoginNameOrMobile" parameterType="string" resultMap="userResultMap">
        select * from user where login_name = #{loginNameOrMobile} or mobile = #{loginNameOrMobile}
    </select>

    <select id="findByIdentityNumber" parameterType="string" resultMap="userResultMap">
        select * from user where identity_number = #{identityNumber}
    </select>

    <select id="findByEmail" parameterType="string" resultMap="userResultMap">
        select * from user where email = #{email} and status = 'ACTIVE'
    </select>

    <!--
    findAllLoginNames
    -->
    <update id="updateEmail" parameterType="map">
        update user set
        email = #{email}
        where login_name = #{loginName}
    </update>

    <!--
    updateSignInCount
    updateUserNameAndIdentityNumber
    -->

    <select id="findUsersByChannel" parameterType="map" resultMap="userResultMap">
        select * from user where channel is not null
        <if test="channels != null and channels.size != 0">
            and channel in
            <foreach item="item" collection="channels" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="findUsersByRegisterTimeOrReferrer" parameterType="map" resultMap="userResultMap">
        select * from user where register_time between #{startTime} and #{endTime}
        <if test="referrer != null and referrer != ''">
            and referrer = #{referrer}
        </if>
        order by register_time
    </select>

    <!--
    findAllByRole
    findCountByRole
    -->

    <select id="findUsersCount" resultType="long">
        select count(1) FROM user
    </select>

    <!--
    findUserModelByMobileLike
    findCountByMobileLike
    -->

    <update id="updateProvinceAndCity" parameterType="map">
        update user set
        province = #{province},
        city = #{city}
        where login_name = #{loginName}
    </update>

    <select id="lockByLoginName" parameterType="string" resultMap="userResultMap" useCache="false">
        select * from user where login_name = #{loginName} for update
    </select>

    <select id="findUsersByProvince" resultMap="userResultMap" useCache="false">
        select * from user
        where province is NULL
        or province = ''
        order by register_time desc
        limit 0, 100
    </select>

    <select id="findAllRecommendation" resultType="java.lang.String">
        SELECT
        r.login_name
        FROM
        referrer_relation r
        JOIN user_role u
        ON r.`referrer_login_name` = u.`login_name`
        AND u.`role` in ('SD_STAFF', 'ZC_STAFF')
        <if test="districtName != null and districtName.size != 0">
            join user ur on ur.login_name = r.login_name
            and ur.province in
            <foreach item="item" index="index" collection="districtName" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        WHERE r.`level` = '1'
    </select>


</mapper>