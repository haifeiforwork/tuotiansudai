<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.membership.repository.mapper.UserMembershipMapper">

    <cache eviction="LRU" type="com.tuotiansudai.cache.MybatisRedisCache" />

    <resultMap id="UserMembershipResultMap" type="UserMembershipModel">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="membership_id" property="membershipId"/>
        <result column="expired_time" property="expiredTime"/>
        <result column="created_time" property="createdTime"/>
        <result column="type" property="type"/>
    </resultMap>

    <resultMap id="UserMembershipItemResultMap" type="UserMembershipItemModel">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="user_name" property="realName"/>
        <result column="mobile" property="mobile"/>
        <result column="membership_point" property="membershipPoint"/>
        <result column="level" property="membershipLevel"/>
        <result column="type" property="userMembershipType"/>
        <result column="register_time" property="registerTime"/>
    </resultMap>

    <insert id="create" parameterType="UserMembershipModel" useGeneratedKeys="true" keyProperty="id">
        insert into user_membership (login_name, membership_id, expired_time, created_time, type)
        value(#{loginName}, #{membershipId}, #{expiredTime}, #{createdTime}, #{type})
    </insert>

    <update id="update" parameterType="UserMembershipModel">
        update user_membership set login_name = #{loginName}, membership_id = #{membershipId}, expired_time = #{expiredTime}, expired_time = #{createdTime}, type = #{type} where id = #{id}
    </update>

    <select id="findById" resultMap="UserMembershipResultMap" parameterType="long">
        select * from user_membership where id = #{id}
    </select>

    <select id="findByLoginName" resultMap="UserMembershipResultMap" parameterType="string">
        select * from user_membership where login_name = #{loginName}
    </select>

    <select id="findUserMembershipItemsByLoginNameAndMobileAndRegisterTimeAndTypeAndVipLevel"
            resultMap="UserMembershipItemResultMap">
        SELECT user_membership.id, user_membership.login_name, account.user_name, user.mobile, account.membership_point,
        membership.level, user_membership.type, user.register_time
        FROM `aa`.`user_membership` join `aa`.`membership` join `aa`.`user` join `aa`.`account`
        ON `user_membership`.`membership_id` = `membership`.`id` AND `user_membership`.`login_name` =
        `user`.`login_name` AND
        `user_membership`.`login_name` = `account`.`login_name`
        <where>
            <if test="loginName != null">
                user_membership.login_name = #{loginName}
            </if>
            <if test="mobile != null">
                AND user.mobile = #{mobile}
            </if>
            <if test="registerStartTime != null">
                AND user.register_time &gt;= #{registerStartTime}
            </if>
            <if test="registerEndTime != null">
                AND user.register_time &lt;= #{registerEndTime}
            </if>
            <if test="type != null">
                AND user_membership.type = #{type}
            </if>
            <if test="levels != null">
                AND membership.level in
                <foreach collection="levels" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

</mapper>