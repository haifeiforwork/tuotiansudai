<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.ask.repository.mapper.AnswerMapper">

    <cache eviction="LRU" type="com.tuotiansudai.cache.MybatisRedisCache"/>

    <resultMap id="answerResultMap" type="AnswerModel">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="mobile" property="mobile"/> <!--mobile is not table column-->
        <result column="question_id" property="questionId"/>
        <result column="answer" property="answer"/>
        <result column="best_answer" property="bestAnswer"/>
        <result column="favored_by" property="favoredBy" typeHandler="com.tuotiansudai.ask.repository.mybatis.StringListTypeHandler"/>
        <result column="approved" property="approved"/>
        <result column="approved_by" property="approvedBy"/>
        <result column="approved_time" property="approvedTime"/>
        <result column="created_time" property="createdTime"/>
    </resultMap>

    <insert id="create" parameterType="AnswerModel" useGeneratedKeys="true" keyProperty="id">
        insert into answer (login_name, question_id, answer, best_answer, favored_by, approved, approved_by, approved_time, created_time)
        value(#{loginName}, #{questionId}, #{answer}, #{bestAnswer}, #{favoredBy, typeHandler=com.tuotiansudai.ask.repository.mybatis.StringListTypeHandler} #{approved}, #{approvedBy}, #{approvedTime}, now())
    </insert>

    <update id="update" parameterType="AnswerModel">
        update answer set
        login_name = #{loginName},
        question_id = #{questionId},
        answer = #{answer},
        best_answer = #{bestAnswer},
        favored_by = #{favoredBy, typeHandler=com.tuotiansudai.ask.repository.mybatis.StringListTypeHandler},
        approved = #{approved},
        approved_by = #{approvedBy},
        approved_time = #{approvedTime}
        where id = #{id}
    </update>

    <select id="lockById" parameterType="long" resultMap="answerResultMap">
        select *
        from answer
        where id = #{id}
        for update
    </select>

    <select id="findByLoginName" parameterType="map" resultMap="answerResultMap">
        select *
        from answer
        where login_name = #{loginName}
        order by created_time desc
        limit #{index}, #{pageSize}
    </select>

    <select id="countByLoginName" parameterType="string" resultType="long">
        select ifnull(count(1), 0)
        from answer
        where login_name = #{loginName}
    </select>

    <select id="findByQuestionId" parameterType="long" resultMap="answerResultMap">
        select *
        from answer
        where question_id = #{questionId}
        and approved is TRUE
        order by created_time desc
    </select>

    <select id="findBestAnswerByQuestionId" parameterType="long" resultMap="answerResultMap">
        select *
        from answer
        where question_id = #{questionId}
        and approved is TRUE
        and best_answer is TRUE
        for update
    </select>
</mapper>